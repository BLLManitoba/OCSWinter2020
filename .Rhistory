#cat(json_entry(selected_files, "26Seedlings"))
###SAMPLE FOR SEX RESEARCH QUESTION:
#sample equal number of babies both male and female only non-English all from the same age group
d <- d %>% filter(language == "Non-English" & age_groups == "8-18")
s <- split(d, d$child_gender)
#sample n unique ids
min_n <- min(sapply(s, function(x){length(unique(x$unique_id))}))
ids <- sapply(s, function(x){sample(unique(x$unique_id), min_n, FALSE)})
ids <- c(ids)
#sample n clips from each of those unique ids
n_clips <- 10
set.seed(1234)
inds <- sapply(ids, function(x){
sample(which(d$unique_id %in% x), n_clips, FALSE)
})
inds <- c(inds)
selected_files <- d[inds,]
selected_files$file_id <- paste0(selected_files$unique_id, selected_files$clip_ID)
#dir.create("./audio/selected_audio_files_sex")
#file.copy(from = paste0("./audio/clips_corpus/", selected_files$clip_ID),
#          to = "./audio/selected_audio_files_sex",
#          overwrite = TRUE)
file.copy(from = paste0("./audio/clips_corpus/", selected_files$clip_ID),
to = "./audio/selected_audio_files",
overwrite = TRUE)
# create age-language test stimuli
txt<-"var sex_stim = [\n"
for (i in unique(selected_files$unique_id)){
txt<-paste0(txt,json_entry(selected_files, i))
}
txt<-paste0(txt,"]")
writeLines(txt,"./stimuli/sex_test_stimuli.js")
x<-"selected_audio_files/33Tsimane0968502306.wav"
x[1:33]
x[1:3]
char(x)
revSubstr(x, start = 1, stop = 4)
revSubstr <- function(x, start, stop) {
x <- strsplit(x, "")
sapply(x,
function(x) paste(rev(rev(x)[start:stop]), collapse = ""),
USE.NAMES = FALSE)
}
revSubstr(x, start = 1, stop = 4)
revSubstr(x, start = 1, stop = 10)
revSubstr(x, start = 1, stop = 15)
revSubstr(x, start = 1, stop = 20)
revSubstr(x, start = 1, stop = 14)
# Open the OSCWinter2020 R Project
# read in functions for making stimuli
source("./R/pre_experiment/OCSWinter2020_functions.R")
# install.packages("tidyverse")
# install.packages("here")
# install.packages("plyr")
library(tidyverse)
library(here)
library(plyr)
#set working directory to where private metadata and unzipped clips direcotry live
#setwd("C:/Users/Matt/Downloads/")
# Will need the private_metadata.csv file from BabbleCor: https://osf.io/rz4tx/
# by contacting the authours and submitting the data usage agreement
# put the file in your project folder but DO NOT share publicly on github
d <- read.csv("private_metadata.csv")
# remove the - sign. It causes problems later
d$corpus<-revalue(d$corpus, c("Casillas-Yeli"="CasillasYeli"))
#add a column called with a unique id (the original child id pasted together with the corpus)
d <- d %>% mutate(unique_id = paste0(child_ID, corpus))
#get rid of data from the warlaumont corpus
d <- d %>% filter(corpus != c("Warlaumont"))
#make a new column with the language
d <- d %>% mutate(language = ifelse(corpus == "Seedlings",
"English",
"Non-English"))
#make a categorical age variable based on 07, 8-18, and 19-36 groupings
d <- d %>% mutate(age_groups = ifelse(age_mo_round <= 7,
"0-7",
ifelse(age_mo_round <= 18,
"8-18",
"19-36")))
#make grouping variable for age-language question
d <- d %>% mutate(age_language = paste0(age_groups, language))
#keep only canonical and non-canonical
d <- d %>% filter(Answer %in% c("Canonical", "Non-canonical"))
###SAMPLE FOR AGE-LANGUAGE RESEARCH QUESTION:
#split into six groups (age*language)
s <- split(d, d$age_language)
#sample n unique ids
min_n <- min(sapply(s, function(x){length(unique(x$unique_id))}))
ids <- sapply(s, function(x){sample(unique(x$unique_id), min_n, FALSE)})
ids <- c(ids)
#sample n clips from each of those unique ids
n_clips <- 10 # should be 20 then narrowed down: will need to write it so that we read in the files from the correct folder and then get the data
set.seed(1234)
inds <- sapply(ids, function(x){
sample(which(d$unique_id %in% x), n_clips, FALSE)
})
inds <- c(inds)
selected_files <- d[inds, ]
selected_files$file_id <- paste0(selected_files$unique_id, selected_files$clip_ID)
#dir.create("./audio/selected_audio_files_age-language")
#file.copy(from = paste0("./audio/clips_corpus/", selected_files$clip_ID),
#          to = "./audio/selected_audio_files_age-language",
#          overwrite = TRUE)
dir.create("./audio/selected_audio_files")
file.copy(from = paste0("./audio/clips_corpus/", selected_files$clip_ID),
to = "./audio/selected_audio_files",
overwrite = TRUE)
# create age-language test stimuli
txt<-"var age_language_stim = [\n"
for (i in unique(selected_files$unique_id)){
txt<-paste0(txt,json_entry(selected_files, i))
}
txt<-paste0(txt,"]")
writeLines(txt,"./stimuli/age_language_test_stimuli.js")
#cat(txt)
#cat(json_entry(selected_files, "26Seedlings"))
###SAMPLE FOR SEX RESEARCH QUESTION:
#sample equal number of babies both male and female only non-English all from the same age group
d <- d %>% filter(language == "Non-English" & age_groups == "8-18")
s <- split(d, d$child_gender)
#sample n unique ids
min_n <- min(sapply(s, function(x){length(unique(x$unique_id))}))
ids <- sapply(s, function(x){sample(unique(x$unique_id), min_n, FALSE)})
ids <- c(ids)
#sample n clips from each of those unique ids
n_clips <- 10
set.seed(1234)
inds <- sapply(ids, function(x){
sample(which(d$unique_id %in% x), n_clips, FALSE)
})
inds <- c(inds)
selected_files <- d[inds,]
selected_files$file_id <- paste0(selected_files$unique_id, selected_files$clip_ID)
#dir.create("./audio/selected_audio_files_sex")
#file.copy(from = paste0("./audio/clips_corpus/", selected_files$clip_ID),
#          to = "./audio/selected_audio_files_sex",
#          overwrite = TRUE)
file.copy(from = paste0("./audio/clips_corpus/", selected_files$clip_ID),
to = "./audio/selected_audio_files",
overwrite = TRUE)
# create age-language test stimuli
txt<-"var sex_stim = [\n"
for (i in unique(selected_files$unique_id)){
txt<-paste0(txt,json_entry(selected_files, i))
}
txt<-paste0(txt,"]")
writeLines(txt,"./stimuli/sex_test_stimuli.js")
revSubstr <- function(x, start, stop) {
x <- strsplit(x, "")
sapply(x,
function(x) paste(rev(rev(x)[start:stop]), collapse = ""),
USE.NAMES = FALSE)
}
stimuli <- function(file_name, i){
file_name_wo_ext <- substr(file_name, 1, nchar(file_name)-4)
paste0(
'<audio src="audio/selected_audio_files/',
revSubstr(file_name, start = 1, stop = 14),
'" id = "clip_',
file_name_wo_ext,
'"></audio><button id="audio_button_',
file_name_wo_ext,
'" onclick="ChangeColour(audio_button_',
file_name_wo_ext,
'); window.which_clicked = UpdateClicked(this.id,window.which_clicked);',
'window.which_clicked = EnableButtons(window.which_clicked); PlaySound(clip_',
file_name_wo_ext,
');" class="jspsych-btn" style="background-color: white; height:50px;width:100px">Clip ',
i,
'</button>'
)
}
dat <- function(selected_files, unique_id){
ind <- which(selected_files$unique_id %in% unique_id)[1]
paste0(
'"data": {\n\t\t',
'"age_group": "',
selected_files$age_groups[ind],
'",\n\t\t "gender": "',
selected_files$child_gender[ind],
'",\n\t\t "language": "',
selected_files$language[ind],
'",\n\t\t "unique_id": "',
selected_files$unique_id[ind],
'"\n\t}'
)
}
json_entry <- function(selected_files, unique_id){
baby_data <- selected_files[selected_files$unique_id %in% unique_id, ]
all_stimuli <- ""
for(i in 1:nrow(baby_data)){
all_stimuli <- paste0(all_stimuli, stimuli(baby_data[i, ]$file_id, i))
}
paste0(
'{\n\t"stimulus":',
"'",
all_stimuli,
"', \n\t",
dat(selected_files, unique_id),
'\n},\n'
)
}
# Matt: basically we need to adapt this code to now subset to not only 10 clips per baby
# but to balance the number of babies that fit in our experimental cells. Putting just those
# into selected_files
# install.packages("tidyverse")
library(tidyverse)
#set working directory to where private metadata and unzipped clips directory live
try(setwd("/home/smithb/Dropbox/PSYC7310Open"))
try(setwd("C:/Users/brads/Dropbox/PSYC7310Open"))
file<-file.choose()
d <- read.csv(file)
#remove "-" from Casillas-Yeli as it causes problems in javascript/html
library(plyr)
d$corpus<-revalue(d$corpus, c("Casillas-Yeli"="CasillasYeli"))
#setwd("C:/Users/Matt/Downloads/")
d <- read.csv("private_metadata.csv")
#add a column called with a unique id (the original child id pasted together with the corpus)
d <- d %>% mutate(unique_id = paste0(child_ID, corpus))
#get rid of data from the warlaumont corpus
d <- d %>% filter(corpus != c("Warlaumont"))
#make a new column with the language
#d <- d %>% mutate(language = ifelse(corpus == "Seedlings",))
d <- d %>% mutate(language = ifelse(corpus == "Seedlings", "English","Non-English"))
#make a categorical age variable based on 07, 8-18, and 19-36 groupings
d <- d %>% mutate(age_groups = ifelse(age_mo_round <= 7, # what is going on here?
"0-7",
ifelse(age_mo_round <= 18,
"8-18",
"19-36")))
# added just so that I would get a decently small subset to play around with while programming the experiment
#d <- subset(d,d$age_groups=="8-18"&d$language=="Non-English")
set.seed(1234)
selected_files <- d %>%
filter(Answer %in% c("Canonical", "Non-canonical")) %>%
group_by(unique_id) %>%
sample_n(10)
# try's added so that it works on both my linux and windows. This will need to change to be more general
try(dir.create("./selected_audio_files"))
try(dir.create("C:/Users/brads/Dropbox/PSYC7310Open/experiments/Babble_Exp/selected_audio_files"))
# similar issues below, needs to be more general probably
# copy selected audio files to new location
# file.copy(from = paste0("./clips_corpus/", selected_files$clip_ID),
#           to = "./selected_audio_files",
#           overwrite = TRUE)
file.copy(from = paste0("./clips_corpus/", selected_files$clip_ID),
to = "./experiments/Babble_Exp/selected_audio_files",
overwrite = TRUE)
# I'm sure we can do this without constantly changing wd but that was my quick solution
try(setwd("./experiments/Babble_Exp/selected_audio_files"))
try(setwd("C:/Users/brads/Dropbox/PSYC7310Open/experiments/Babble_Exp/selected_audio_files"))
# rename the "selected_files" to inclue the corpus name/unique id at the beginning
files_list<-list.files()
for(i in 1:length(selected_files$clip_ID)){
file.rename(files_list[i],paste0(selected_files$unique_id[i],selected_files$clip_ID[i]))
}
# again, reseting the wd
try(setwd("/home/smithb/Dropbox/PSYC7310Open"))
try(setwd("C:/Users/brads/Dropbox/PSYC7310Open"))
# I have no idea why these are duplicated. I'm guessing it has to do with git just keeping additions and not removing things that were deleted
# ergo I have now commented these out
# d <- d %>% mutate(age_groups = ifelse(age_mo_round <= 7,
#                                       "0-7",
#                                       ifelse(age_mo_round <= 18,
#                                              "8-18",
#                                              "19-36")))
#
#
# set.seed(1234)
# selected_files <- d %>%
#     filter(Answer %in% c("Canonical", "Non-canonical")) %>%
#     group_by(unique_id) %>%
#     sample_n(10)
#
#
# dir.create("./selected_audio_files")
# file.copy(from = paste0("./clips/clips_corpus/", selected_files$clip_ID),
#           to = "./selected_audio_files",
#           overwrite = TRUE)
# Open the OSCWinter2020 R Project
# read in functions for making stimuli
source("./R/pre_experiment/OCSWinter2020_functions.R")
# install.packages("tidyverse")
# install.packages("here")
# install.packages("plyr")
library(tidyverse)
library(here)
library(plyr)
#set working directory to where private metadata and unzipped clips direcotry live
#setwd("C:/Users/Matt/Downloads/")
# Will need the private_metadata.csv file from BabbleCor: https://osf.io/rz4tx/
# by contacting the authours and submitting the data usage agreement
# put the file in your project folder but DO NOT share publicly on github
d <- read.csv("private_metadata.csv")
# remove the - sign. It causes problems later
d$corpus<-revalue(d$corpus, c("Casillas-Yeli"="CasillasYeli"))
#add a column called with a unique id (the original child id pasted together with the corpus)
d <- d %>% mutate(unique_id = paste0(child_ID, corpus))
#get rid of data from the warlaumont corpus
d <- d %>% filter(corpus != c("Warlaumont"))
#make a new column with the language
d <- d %>% mutate(language = ifelse(corpus == "Seedlings",
"English",
"Non-English"))
#make a categorical age variable based on 07, 8-18, and 19-36 groupings
d <- d %>% mutate(age_groups = ifelse(age_mo_round <= 7,
"0-7",
ifelse(age_mo_round <= 18,
"8-18",
"19-36")))
#make grouping variable for age-language question
d <- d %>% mutate(age_language = paste0(age_groups, language))
#keep only canonical and non-canonical
d <- d %>% filter(Answer %in% c("Canonical", "Non-canonical"))
###SAMPLE FOR AGE-LANGUAGE RESEARCH QUESTION:
#split into six groups (age*language)
s <- split(d, d$age_language)
#sample n unique ids
min_n <- min(sapply(s, function(x){length(unique(x$unique_id))}))
ids <- sapply(s, function(x){sample(unique(x$unique_id), min_n, FALSE)})
ids <- c(ids)
#sample n clips from each of those unique ids
n_clips <- 10 # should be 20 then narrowed down: will need to write it so that we read in the files from the correct folder and then get the data
set.seed(1234)
inds <- sapply(ids, function(x){
sample(which(d$unique_id %in% x), n_clips, FALSE)
})
inds <- c(inds)
selected_files <- d[inds, ]
selected_files$file_id <- paste0(selected_files$unique_id, selected_files$clip_ID)
#dir.create("./audio/selected_audio_files_age-language")
#file.copy(from = paste0("./audio/clips_corpus/", selected_files$clip_ID),
#          to = "./audio/selected_audio_files_age-language",
#          overwrite = TRUE)
dir.create("./audio/selected_audio_files")
file.copy(from = paste0("./audio/clips_corpus/", selected_files$clip_ID),
to = "./audio/selected_audio_files",
overwrite = TRUE)
# create age-language test stimuli
txt<-"var age_language_stim = [\n"
for (i in unique(selected_files$unique_id)){
txt<-paste0(txt,json_entry(selected_files, i))
}
txt<-paste0(txt,"]")
writeLines(txt,"./stimuli/age_language_test_stimuli.js")
#cat(txt)
#cat(json_entry(selected_files, "26Seedlings"))
###SAMPLE FOR SEX RESEARCH QUESTION:
#sample equal number of babies both male and female only non-English all from the same age group
d <- d %>% filter(language == "Non-English" & age_groups == "8-18")
s <- split(d, d$child_gender)
#sample n unique ids
min_n <- min(sapply(s, function(x){length(unique(x$unique_id))}))
ids <- sapply(s, function(x){sample(unique(x$unique_id), min_n, FALSE)})
ids <- c(ids)
#sample n clips from each of those unique ids
n_clips <- 10
set.seed(1234)
inds <- sapply(ids, function(x){
sample(which(d$unique_id %in% x), n_clips, FALSE)
})
inds <- c(inds)
selected_files <- d[inds,]
selected_files$file_id <- paste0(selected_files$unique_id, selected_files$clip_ID)
#dir.create("./audio/selected_audio_files_sex")
#file.copy(from = paste0("./audio/clips_corpus/", selected_files$clip_ID),
#          to = "./audio/selected_audio_files_sex",
#          overwrite = TRUE)
file.copy(from = paste0("./audio/clips_corpus/", selected_files$clip_ID),
to = "./audio/selected_audio_files",
overwrite = TRUE)
# create age-language test stimuli
txt<-"var sex_stim = [\n"
for (i in unique(selected_files$unique_id)){
txt<-paste0(txt,json_entry(selected_files, i))
}
txt<-paste0(txt,"]")
writeLines(txt,"./stimuli/sex_test_stimuli.js")
here()
library(here)
here()
here(f = index.html)
here(f = "index.html")
here()
here::here()
# read in functions for making stimuli
source("./R/pre_experiment/OCSWinter2020_functions.R")
# read in functions for making stimuli
source("./R/pre_experiment/OCSWinter2020_functions.R")
get.wd()
getwd()
here()
here:here()
here::here()
# Open the OSCWinter2020 R Project
setwd(here::here())
# Open the OSCWinter2020 R Project
getwd()
# read in functions for making stimuli
source("./R/pre_experiment/OCSWinter2020_functions.R")
# install.packages("tidyverse")
# install.packages("here")
# install.packages("plyr")
library(tidyverse)
library(here)
library(plyr)
# Will need the private_metadata.csv file from BabbleCor: https://osf.io/rz4tx/
# by contacting the authours and submitting the data usage agreement
# put the file in your project folder but DO NOT share publicly on github
d <- read.csv("private_metadata.csv")
# remove the - sign. It causes problems later
d$corpus<-revalue(d$corpus, c("Casillas-Yeli"="CasillasYeli"))
#add a column called with a unique id (the original child id pasted together with the corpus)
d <- d %>% mutate(unique_id = paste0(child_ID, corpus))
#get rid of data from the warlaumont corpus
d <- d %>% filter(corpus != c("Warlaumont"))
#make a new column with the language
d <- d %>% mutate(language = ifelse(corpus == "Seedlings",
"English",
"Non-English"))
#make a categorical age variable based on 07, 8-18, and 19-36 groupings
d <- d %>% mutate(age_groups = ifelse(age_mo_round <= 7,
"0-7",
ifelse(age_mo_round <= 18,
"8-18",
"19-36")))
#make grouping variable for age-language question
d <- d %>% mutate(age_language = paste0(age_groups, language))
#keep only canonical and non-canonical
d <- d %>% filter(Answer %in% c("Canonical", "Non-canonical"))
#split into six groups (age*language)
s <- split(d, d$age_language)
#sample n unique ids
min_n <- min(sapply(s, function(x){length(unique(x$unique_id))}))
ids <- sapply(s, function(x){sample(unique(x$unique_id), min_n, FALSE)})
ids <- c(ids)
#sample n clips from each of those unique ids
n_clips <- 10 # should be 20 then narrowed down: will need to write it so that we read in the files from the correct folder and then get the data
set.seed(1234)
inds <- sapply(ids, function(x){
sample(which(d$unique_id %in% x), n_clips, FALSE)
})
inds <- c(inds)
selected_files <- d[inds, ]
selected_files$file_id <- paste0(selected_files$unique_id, selected_files$clip_ID)
#dir.create("./audio/selected_audio_files_age-language")
#file.copy(from = paste0("./audio/clips_corpus/", selected_files$clip_ID),
#          to = "./audio/selected_audio_files_age-language",
#          overwrite = TRUE)
dir.create("./audio/selected_audio_files")
file.copy(from = paste0("./audio/clips_corpus/", selected_files$clip_ID),
to = "./audio/selected_audio_files",
overwrite = TRUE)
# create age-language test stimuli
txt<-"var age_language_stim = [\n"
for (i in unique(selected_files$unique_id)){
txt<-paste0(txt,json_entry(selected_files, i))
}
txt<-paste0(txt,"]")
writeLines(txt,"./stimuli/age_language_test_stimuli.js")
#sample equal number of babies both male and female only non-English all from the same age group
d <- d %>% filter(language == "Non-English" & age_groups == "8-18")
s <- split(d, d$child_gender)
#sample n unique ids
min_n <- min(sapply(s, function(x){length(unique(x$unique_id))}))
ids <- sapply(s, function(x){sample(unique(x$unique_id), min_n, FALSE)})
ids <- c(ids)
#sample n clips from each of those unique ids
n_clips <- 10
set.seed(1234)
inds <- sapply(ids, function(x){
sample(which(d$unique_id %in% x), n_clips, FALSE)
})
inds <- c(inds)
selected_files <- d[inds,]
selected_files$file_id <- paste0(selected_files$unique_id, selected_files$clip_ID)
#dir.create("./audio/selected_audio_files_sex")
#file.copy(from = paste0("./audio/clips_corpus/", selected_files$clip_ID),
#          to = "./audio/selected_audio_files_sex",
#          overwrite = TRUE)
file.copy(from = paste0("./audio/clips_corpus/", selected_files$clip_ID),
to = "./audio/selected_audio_files",
overwrite = TRUE)
# create age-language test stimuli
txt<-"var sex_stim = [\n"
for (i in unique(selected_files$unique_id)){
txt<-paste0(txt,json_entry(selected_files, i))
}
txt<-paste0(txt,"]")
writeLines(txt,"./stimuli/sex_test_stimuli.js")
View(selected_files)
View(d)
d$age_groups
View(d)
# read in functions for making stimuli
source("./R/pre_experiment/OCSWinter2020_functions.R")
# install.packages("tidyverse")
# install.packages("here")
# install.packages("plyr")
library(tidyverse)
library(here)
library(plyr)
# Will need the private_metadata.csv file from BabbleCor: https://osf.io/rz4tx/
# by contacting the authours and submitting the data usage agreement
# put the file in your project folder but DO NOT share publicly on github
d <- read.csv("private_metadata.csv")
View(d)
d$age_mo_round
hist(d$age_mo_round)
describe(d$age_mo_round)
summary(d$age_mo_round)
min(d$age_mo_round)
